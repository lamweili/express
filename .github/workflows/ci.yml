name: ci

on:
- pull_request
- push
- workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name:
        - Node.js 8.x

        include:
        - name: Node.js 8.x
          node-version: "8.17"
          npm-i: mocha@7.2.0

    steps:
    - uses: actions/checkout@v3

    - name: Install Node.js ${{ matrix.node-version }}
      shell: bash -eo pipefail -l {0}
      run: |
        nvm install --default ${{ matrix.node-version }}
        dirname "$(nvm which ${{ matrix.node-version }})" >> "$GITHUB_PATH"

    #- name: Configure npm
    #  run: |
    #    npm config set loglevel error
    #    npm config set shrinkwrap false

    - name: Install npm module(s) ${{ matrix.npm-i }}
      run: npm install --save-dev ${{ matrix.npm-i }}
      if: matrix.npm-i != ''

    #- name: Remove non-test dependencies
    #  run: npm rm --silent --save-dev connect-redis

    #- name: Setup Node.js version-specific dependencies
    #  shell: bash
    #  run: |
    #    # eslint for linting
    #    # - remove on Node.js < 10
    #    if [[ "$(cut -d. -f1 <<< "${{ matrix.node-version }}")" -lt 10 ]]; then
    #      node -pe 'Object.keys(require("./package").devDependencies).join("\n")' | \
    #        grep -E '^eslint(-|$)' | \
    #        sort -r | \
    #        xargs -n1 npm rm --silent --save-dev
    #    fi

    - name: Install Node.js dependencies
      run: npm install

    - name: List environment
      id: list_env
      shell: bash
      run: |
        echo "node@$(node -v)"
        echo "npm@$(npm -v)"
        npm -s ls ||:
        (npm -s ls --depth=0 ||:) | awk -F'[ @]' 'NR>1 && $2 { print "::set-output name=" $2 "::" $3 }'

    - name: Run tests
      shell: bash
      run: npm run test-ci

    - name: Lint code
      if: steps.list_env.outputs.eslint != ''
      run: npm run lint

    - name: Collect code coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        flag-name: run-${{ matrix.test_number }}
        parallel: true

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Upload code coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true
